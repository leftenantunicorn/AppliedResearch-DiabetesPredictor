@model Predictor.Models.DiabetesRecordViewModel

<form class="form-horizontal" id="form">
    <div class="row col-sm-12">

        <div class="row col-sm-6">
            <!-- Record Fields -->
            <h2>Enter a Record:</h2>
            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.num_preg, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.num_preg, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.glucose_conc, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.glucose_conc, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.diastolic_bp, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.diastolic_bp, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.thickness, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.thickness, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.insulin, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.insulin, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.bmi, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.bmi, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.diab_pred, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.diab_pred, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.age, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.age, new { @class = "form-control" })
                </div>
            </div>

        </div>

        <div class="row col-sm-6">
            <!-- Risk Section -->
            <h2 class="col-xs-12">Diabetic Risk:</h2>
            <div id="results" class="parent col-xs-12">
                <div id="description">
                    <h4 id="desc-big">&nbsp;</h4>
                    <h5 id="desc-small">&nbsp;</h5>
                </div>
                <img src="~/images/gray.png" style="" id="outcome-img" class="child" />
            </div>

        </div>
    </div>

    <hr />

    <div class="row col-sm-12">
        <div class="row col-sm-6">
            <!-- Training Section and Buttons -->
            <div class="form-group form-group-sm checkbox" style="margin-bottom:20px">
                <label class="col-sm-12 control-label" style="padding-left:0px">
                    <input type="checkbox" id="add" />Add this record to the training model?
                </label>
            </div>

            <div class="form-group form-group-sm" id="outcome" hidden>
                @Html.LabelFor(model => model.outcome, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.RadioButtonFor(model => model.outcome, "1", new { id="yes"}) Yes
                </div>
                <div class="col-sm-7 col-md-12 col-md-push-5">
                    @Html.RadioButtonFor(model => model.outcome, "0", new { id = "no", @checked = true }) No
                </div>
            </div>

            <div class="form-group form-group-sm" id="buttons">
                <button type="button" id="predictresult" name="predict">Predict Risk</button>
                <button type="button" id="addToTrain" name="add" disabled>Submit Training Data</button>
                <button type="button" id="newpredict" name="clear" disabled>Clear</button>
            </div>
        </div>
        <div class="row col-sm-6 parent" id="train-description">
            <h4 class="child" id="desc-train">&nbsp</h4>
        </div>
    </div>
</form>

@section Scripts {
    <script type="text/javascript">
        $("#predictresult").click(function(e) {
            e.preventDefault();

            var data = $('#form').serializeArray().reduce((obj, item) => {
                    obj[item.name] = item.value;
                    return obj;
                },
                {});

            $("#outcome-img").addClass("loading").attr("src", '@Url.Content("~/images/gray.png")');
            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: '@Url.Action("prediction", "api")',
                data: JSON.stringify(data),
                success: function(result) {
                    var probability = parseFloat(result);
                    $("#desc-big").html("");
                    $("#desc-small").html("");
                    switch (true) {
                    case (probability < 50):
                            $("#outcome-img").attr("src", '@Url.Content("~/images/green.png")');
                            $("#desc-big").html("You are at <strong>low</strong> risk.  ");
                        break;
                    case (probability < 90):
                            $("#outcome-img").attr("src", '@Url.Content("~/images/yellow.png")');
                            $("#desc-big").html("You are at <strong>moderate</strong> risk.  ");
                        break;
                    default:
                            $("#outcome-img").attr("src", '@Url.Content("~/images/red.png")');
                            $("#desc-big").html("You are at <strong>high</strong> risk.  ");
                    }

                    $("#desc-small").append("Your probability of having diabetes is " + result + ".");

                    blockForm();
                },
                error: function(result) {
                    alert('There was an error processing your request.');
                },
                complete: function() {
                    $('#outcome-img').removeClass("loading");
                }
            });
        });

        $("#add").change(() => {
            if (document.getElementById("add").checked) {
                $("#outcome").show();
                toggleButtons("add");
            }
            else {
                $("#outcome").hide();
                toggleButtons("predict");
            }
        });

        $("#addToTrain").click(function(e) {
            e.preventDefault();

            var data = $('#form').serializeArray().reduce((obj, item) => {
                    obj[item.name] = item.value;
                    return obj;
                },
                {});

            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: '@Url.Action("prediction/trainingset", "api")',
                data: JSON.stringify(data),
                success: function (result) {

                    $("#desc-train").html("");

                    if (result) $("#desc-train").html("You data was successfully submitted.");
                    else $("#desc-train").html("There was an error submitting your data. Please verify values.");

                    blockForm();
                },
                error: function(result) {
                    alert('There was an error processing your request.');
                },
                complete: function() {
                }
            });
        });

        $("#newpredict").click(function(e) {
            e.preventDefault();

            $('input').each(function() {
                $(this).attr('disabled', false);
                if ($(this).is(":text")) $(this).val("0");
            });

            $("#no").click();

            $(this).removeProp('checked');

            if (document.getElementById("add").checked) { $("#add").click() };
            $("#desc-big").html("&nbsp");
            $("#desc-small").html("&nbsp");
            $("#desc-train").html("&nbsp");

            $("#outcome-img").attr("src", '@Url.Content("~/images/gray.png")');

            toggleButtons("predict");
        });

        function toggleButtons(setActiveButton) {
            $('button').each(function () {
                if ($(this).attr('name') === setActiveButton) $(this).attr('disabled', false);
                else $(this).attr('disabled', true);
            });
        }

        function blockForm() {
            $('input').each(function () {
                $(this).attr('disabled', true);
            });

            toggleButtons("clear");
        }

    </script>
}
