@model Predictor.Models.DiabetesRecord

@section Styles {
    <style>
        input { max-width: 80%; }
        .row { display: -webkit-box; display: -webkit-flex;display: -ms-flexbox;display: flex; flex-wrap: wrap;}
        .parent { margin: auto; display: flex; max-height: 80%; max-width: 80%;}

        @@media screen and (max-width: 991px) {
            .child {margin: auto; /* Magic! */min-height: 100%; min-width: 100%;}
            .row > [class*='col-'] {display: flex;flex-direction: column; margin-left: auto;margin-right: auto;}
        }

        @@media screen and (min-width: 992px) {
            .child {margin: auto; /* Magic! */min-height: 50%;min-width: 50%;}
            .row > [class*='col-'] {display: flex;flex-direction: column;}
        }

        @@keyframes blink {
            0% {opacity: 0.71;}
            50% {opacity: 0.15;}
            100% {opacity: 0.71;}
        }

        .loading {animation: blink 2s;animation-iteration-count: infinite}
    </style>
}

<div class="row col-sm-12">
    <div class="row col-sm-6">
        <h2>Enter a Record:</h2>
        <form class="form-horizontal" id="form">
            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.num_preg, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.num_preg, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.glucose_conc, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.glucose_conc, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.diastolic_bp, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.diastolic_bp, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.thickness, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.thickness, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.insulin, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.insulin, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.bmi, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.bmi, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.diab_pred, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.diab_pred, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group form-group-sm">
                @Html.LabelFor(model => model.age, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.age, new { @class = "form-control" })
                </div>
            </div>
            
            <div class="form-group form-group-sm checkbox" style="margin-bottom:20px">
                <label>
                    <input type="checkbox" id="add" /> Add this record to the training model?
                </label>
            </div>
            <div class="form-group form-group-sm" hidden id="outcome">
                @Html.LabelFor(model => model.outcome, new { @class = "col-sm-5 control-label" })
                <div class="col-sm-7">
                    @Html.CheckBoxFor(model => model.outcome, new { @class = "form-control" })
                </div>
            </div>
</form>
        <button type="button" id="predictresult">Predict</button>
        <button type="button" id="newpredict" hidden>New Precidction</button>
        <button type="button" id="addToTrain" hidden>Add</button>
    </div>

<div class="row col-sm-6">
    <h2 class="col-xs-12">Diabetic Risk:</h2>
    <div id="outcome" class="parent col-xs-12">
        <img src="~/images/gray.png" style="" id="outcome-img"  class="child"/>
    </div>
</div>

</div>

@section Scripts {
    <script type="text/javascript">
        $("#predictresult").click(function(e) {
            e.preventDefault();

            var data = $('#form').serializeArray().reduce((obj, item) => {
                    obj[item.name] = item.value;
                    return obj;
                },
                {});

            $("#outcome-img").addClass("loading").attr("src", '@Url.Content("~/images/gray.png")');
            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: '@Url.Action("prediction", "api")',
                data: JSON.stringify(data),
                success: function(result) {
                    var probability = parseFloat(result);
                    switch (true) {
                    case (probability < 50):
                        $("#outcome-img").attr("src", '@Url.Content("~/images/green.png")');
                        break;
                    case (probability < 90):
                        $("#outcome-img").attr("src", '@Url.Content("~/images/yellow.png")');
                        break;
                    default:
                        $("#outcome-img").attr("src", '@Url.Content("~/images/red.png")');
                    }

                    $('.form-control').each(function() {
                        $(this).attr('readonly', true);
                    });

                    $("#predictresult").toggle();
                    $("#newpredict").toggle();
                },
                error: function(result) {
                    alert('There was an error processing your request.');
                },
                complete: function() {
                    $('#outcome-img').removeClass("loading");
                }
            });
        });

        $("#add").change(() => {
            $("#outcome").toggle();
        });

        $("#addToTrain").click(function(e) {
            e.preventDefault();

            var data = $('#form').serializeArray().reduce((obj, item) => {
                    obj[item.name] = item.value;
                    return obj;
                },
                {});

            $("#outcome-img").addClass("loading").attr("src", '@Url.Content("~/images/gray.png")');
            $.ajax({
                type: "POST",
                contentType: "application/json",
                url: '@Url.Action("prediction", "api")',
                data: JSON.stringify(data),
                success: function(result) {
                    var probability = parseFloat(result);
                    switch (true) {
                    case (probability < 50):
                        $("#outcome-img").attr("src", '@Url.Content("~/images/green.png")');
                        break;
                    case (probability < 90):
                        $("#outcome-img").attr("src", '@Url.Content("~/images/yellow.png")');
                        break;
                    default:
                        $("#outcome-img").attr("src", '@Url.Content("~/images/red.png")');
                    }

                    $('.form-control').each(function() {
                        $(this).attr('readonly', true);
                    });

                    $("#predictresult").toggle();
                    $("#newpredict").toggle();
                },
                error: function(result) {
                    alert('There was an error processing your request.');
                },
                complete: function() {
                    $('#outcome-img').removeClass("loading");
                }
            });
        });

        $("#newpredict").click(function(e) {
            e.preventDefault();

            $('.form-control').each(function() {
                $(this).attr('readonly', false);
                $(this).val("0");
            });

            $("#newpredict").toggle();
            $("#predictresult").toggle();
            $("#outcome-img").attr("src", '@Url.Content("~/images/gray.png")');
        });
    </script>
}
